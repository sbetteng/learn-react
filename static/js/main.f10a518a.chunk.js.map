{"version":3,"sources":["logo.svg","List.js","App.js","reportWebVitals.js","index.js"],"names":["List","Component","Home","ListUsers","to","DetailUsers","match","params","name","NotFound","App","props","handleSubmit","event","preventDefault","setState","items","state","todoItems","handleChange","target","value","isLoading","fetch","then","response","json","data","className","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAAe,I,MCSAA,I,cCWKC,YA2CEA,YA2BtB,SAASC,IACP,OAAO,kDAGT,SAASC,IACP,OACE,gCACE,mDACA,+BACE,cAAC,IAAD,CAAMC,GAAG,gBAAT,sBADF,IAC2C,uBACzC,cAAC,IAAD,CAAMA,GAAG,gBAAT,4BAMR,SAASC,EAAT,GAAiC,IAAVC,EAAS,EAATA,MACrB,OAAO,8CAAkBA,EAAMC,OAAOC,QAGxC,SAASC,IACP,OAAO,8D,IA0GMC,E,kDAtGb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAQRC,aAAe,SAACC,GACdA,EAAMC,iBAEN,EAAKC,SAAS,CAEZC,MAAK,sBAAW,EAAKC,MAAMD,OAAtB,CAA6B,EAAKC,MAAMC,YAC7CA,UAAY,MAfG,EAmBnBC,aAAe,SAACN,GACd,EAAKE,SAAS,CACZG,UAAWL,EAAMO,OAAOC,SAnB1B,EAAKJ,MAAQ,CACXC,UAAW,GACXF,MAAO,GACPM,WAAW,GALI,E,gEA2BE,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKZ,SAAS,CAACC,MAAOW,EAAML,WAAW,S,+BAUvD,OACI,cAAC,IAAD,UACA,sBAAKM,UAAU,MAAf,UAQE,gCACE,mCAAK,cAAC,IAAD,CAAMxB,GAAG,IAAT,uBACL,mCAAK,cAAC,IAAD,CAAMA,GAAG,SAAT,2BAGP,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyB,KAAK,IAAIC,OAAK,EAACC,UAAW7B,IACjC,cAAC,IAAD,CAAO2B,KAAK,SAASC,OAAK,EAACC,UAAW5B,IACtC,cAAC,IAAD,CAAO0B,KAAK,eAAeC,OAAK,EAACC,UAAW1B,IAC5C,cAAC,IAAD,CAAO0B,UAAWtB,kB,GA7DdR,aCtGH+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f10a518a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nfunction List(props) { \r\n    return (\r\n        <ul>\r\n            {props.items.map((item, index) => <li key={index}> {item}</li>)}\r\n        </ul>\r\n    )\r\n}\r\nexport default List;","import logo from './logo.svg';\nimport './App.scss';\nimport { Component } from 'react';\nimport List from './List';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\n\n// Component\n// function Greeting() { `\n//   return <h1>Hallo Betteng</h1>\n// }\n\n// Properties\nfunction Biodata(props) { \n  return <span>umur {props.age}</span>\n}\nfunction Greeting(props) { \n  return <h1>Hallo {props.name} - <Biodata age={props.age}/> </h1>\n}\n\n// State\nclass Timer extends Component { \n  constructor(props) { \n    super(props)\n      this.state = {\n        time: props.start\n      \n    }\n  }\n\n  // Lifecycle\n  componentDidMount() { \n    this.addInterval = setInterval(() => this.increase(), 1000);\n  }\n\n  componentWillUnmount() { \n    clearInterval(this.addInterval)\n  }\n\n  increase() { \n    // update setiap detiknya\n    this.setState((state, props) => ({\n        time: parseInt(state.time) + 1\n    }))\n  }\n\n  render() { \n    return (\n      <div> {this.state.time} Detik</div>\n    )\n  }\n}\n\n// function Clicker() { \n//   function handleClick(e) { \n//     alert(\"Berhasil diclick!\")\n//     e.preventDefault();    \n//   }\n\n//   return (\n//     <a href=\"#\" onClick={handleClick}> Click Here</a>\n//   )\n// }\n\nclass Tooggle extends Component { \n  constructor(props) { \n    super(props)\n    this.state = {\n      toggleStatus: true\n    }\n\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick() { \n    this.setState(state => ({\n      toggleStatus: !state.toggleStatus\n    }))\n  }\n\n  render(){ \n    return (\n      <button onClick={this.handleClick}>\n        {this.state.toggleStatus ? 'ON' : 'OFF'}\n        <p>Kondisi sekarang {this.state.toggleStatus ? 'Menyala' : 'Mati'}</p>\n      </button>\n      )\n  }\n\n}\n\nfunction Home() { \n  return <h1>Ini Halaman Home</h1>\n}\n\nfunction ListUsers() { \n  return (\n    <div>\n      <h1>Ini Halaman Users</h1>\n      <ul>\n        <Link to='users/Betteng'> Betteng</Link> <br />\n        <Link to='users/Syaiful'> Syaiful</Link>\n      </ul>\n    </div>\n\n  ) \n}\nfunction DetailUsers({ match }) { \n  return <h1>ini Halaman { match.params.name }</h1>\n}\n\nfunction NotFound() { \n  return <h1>404, Halaman Tidak ditemukan</h1>\n}\n  \nclass App extends Component {\n  constructor(props) { \n    super(props)\n    this.state = { \n      todoItems: '',\n      items: [],\n      isLoading: true\n    }\n  }\n\n  handleSubmit = (event) => { \n    event.preventDefault();\n    // console.log('muncul')\n    this.setState({\n      // items: this.state.items.concat([this.state.todoItems]),\n      items     : [...this.state.items, this.state.todoItems],\n      todoItems : ''\n    })\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      todoItems: event.target.value\n    })\n    // console.log(this.state.todoItems)\n  }\n\n  // API\n  componentDidMount() { \n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(data => this.setState({items: data, isLoading: false}))\n  }\n  \n\n  render() { \n    // const { items, isLoading } = this.state\n    \n    // if (isLoading) { \n    //   return <p>Loading.....</p>\n    // }\n    return (\n        <BrowserRouter>\n        <div className=\"App\">\n            {/* <form onSubmit={this.handleSubmit}>\n              <input value={this.state.todoItems} onChange={this.handleChange} />\n              <button>Add</button>\n            </form>\n            <div>\n              <List items={this.state.items} />\n            </div> */}\n          <nav>\n            <li> <Link to='/'> Home </Link></li>\n            <li> <Link to='/users'> Users </Link></li>\n          </nav>\n          \n          <main>\n            <Switch>\n              <Route path='/' exact component={Home} />\n              <Route path='/users' exact component={ListUsers} />\n              <Route path='/users/:name' exact component={DetailUsers} />\n              <Route component={NotFound} />\n            </Switch>\n            {/* <div>\n            <ul>\n              { items.map ((item, index) =>\n              \n                <li key={index}> { item.name }</li>)\n              }\n            </ul>\n            </div> */}\n\n            {/* <header className=\"App-header\">\n            <Tooggle />\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <p>\n              Edit <code>src/App.js</code> and save to reload.\n            </p> */}\n\n            \n            \n            {/* <Clicker /> */}\n            {/* <Timer start=\"0\" />\n            <Timer start=\"5\" />\n            <Greeting name=\"Syaiful\" age=\"21\" />\n            <Greeting name=\"Betteng\" age=\"25\"/> */}\n            {/* <div className=\"Button\">Button Here</div> */}\n            {/* <a\n              className=\"App-link\"\n              href=\"https://reactjs.org\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Learn React\n            </a> */}\n          {/* </header> */}\n          </main>\n        </div>\n        </BrowserRouter>\n      );\n    }\n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}